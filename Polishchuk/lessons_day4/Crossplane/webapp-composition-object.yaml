apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: webapps.example.org
spec:
  compositeTypeRef:
    apiVersion: example.org/v1alpha1
    kind: WebApp
  resources:
    # Using Object resource instead of direct Deployment
    - name: deployment
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        spec:
          # Provider configuration reference
          providerConfigRef:
            name: default
          # The actual Kubernetes manifest
          forProvider:
            manifest:
              apiVersion: apps/v1
              kind: Deployment
              metadata:
                name: webapp-deployment
                namespace: default
              spec:
                replicas: 1  # Will be patched
                selector:
                  matchLabels:
                    app: webapp
                template:
                  metadata:
                    labels:
                      app: webapp
                  spec:
                    containers:
                      - name: webapp
                        image: nginx:latest  # Will be patched
                        ports:
                          - containerPort: 80
                        resources:
                          requests:
                            memory: "64Mi"
                            cpu: "250m"
                          limits:
                            memory: "128Mi"
                            cpu: "500m"
      patches:
        # Patch replicas parameter
        - type: FromCompositeFieldPath
          fromFieldPath: "spec.parameters.replicas"
          toFieldPath: "spec.forProvider.manifest.spec.replicas"
        # Patch image parameter
        - type: FromCompositeFieldPath
          fromFieldPath: "spec.parameters.image"
          toFieldPath: "spec.forProvider.manifest.spec.template.spec.containers[0].image"
        # Patch deployment name dynamically
        - type: FromCompositeFieldPath
          fromFieldPath: "metadata.name"
          toFieldPath: "spec.forProvider.manifest.metadata.name"
          transforms:
            - type: string
              string:
                fmt: "%s-deployment"
    # Add Service using Object resource
    - name: service
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        spec:
          providerConfigRef:
            name: default
          forProvider:
            manifest:
              apiVersion: v1
              kind: Service
              metadata:
                name: webapp-service
                namespace: default
              spec:
                selector:
                  app: webapp
                ports:
                  - port: 80
                    targetPort: 80
                    protocol: TCP
                type: ClusterIP
      patches:
        # Patch service name dynamically
        - type: FromCompositeFieldPath
          fromFieldPath: "metadata.name"
          toFieldPath: "spec.forProvider.manifest.metadata.name"
          transforms:
            - type: string
              string:
                fmt: "%s-service"